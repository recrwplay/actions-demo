# This is an example of the docs-pr.yml workflow available from the recrwplay org
name: "Verify PR"

on:
  pull_request:
    branches:
    - dev

jobs:

  docs-build-for-pr:
    uses: recrwplay/actions-demo/.github/workflows/reusable-docs-build.yml@dev
    with:
      deploy-id: ${{ github.event.number }}
      retain-artifacts: 14

  docs-verify-for-pr:
    needs: docs-build-for-pr
    uses: recrwplay/actions-demo/.github/workflows/reusable-docs-verify.yml@dev
    
    
  set-outputs:
    needs: docs-build-for-pr
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      deploy-url: ${{ steps.get-deploy-url.outputs.deploy-url }}
    steps:
      - id: get-deploy-url
        env:
          ORG: ${{ github.event.repository.owner.login }}
          REPO: ${{ github.event.repository.name }}
          DEPLOYID: ${{ github.event.number }}
        run: |
          deployurl=$ORG-$REPO-$DEPLOYID.surge.sh
          echo "deploy-url=$deployurl" >> $GITHUB_OUTPUT
        
  save-changelog:
    needs: set-outputs
    runs-on: ubuntu-latest
    steps:
      - name: Check out PR branch
        uses: actions/checkout@v3
        
      - name: Read antora component name
        id: antora-component-name
        uses: jbutcher5/read-yaml@main
        with:
          file: './antora.yml'
          key-path: '["name"]'

      - name: Read antora component version
        id: antora-component-version
        uses: jbutcher5/read-yaml@main
        with:
          file: './antora.yml'
          key-path: '["version"]'

      - name: Generate docs path
        id: antora-docs-path
        env:
          COMPONENT_NAME: ${{ steps.antora-component-name.outputs.data }}
          COMPONENT_VERSION: ${{ steps.antora-component-version.outputs.data }}
          DEPLOYURL: ${{ needs.set-outputs.outputs.deploy-url }}
        run: |
          echo "docs-path=$COMPONENT_NAME/$COMPONENT_VERSION" >> $GITHUB_OUTPUT

      - name: Comment preamble
        env:
          DEPLOYURL: ${{ needs.set-outputs.outputs.deploy-url }}
        run: |
          echo "This PR contains docs changes
          
          You can review the changes at https://$DEPLOYURL

          Changed files:
          " > changelog
                  
      - name: Save changelog to file
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
          DEPLOYID: ${{ github.event.number }}
          DEPLOYURL: ${{ needs.set-outputs.outputs.deploy-url }}
          DOCSPATH: ${{ steps.antora-docs-path.outputs.docs-path }}
        run: |
          gh pr view $DEPLOYID --json files --jq \
          'limit(10; .files.[] | select(.path | contains("/pages/")) as $changes \
          | (.path | sub("modules/.+/pages/(?<f>.*).adoc"; "- [\(.f)](https://$DEPLOYURL/$DOCSPATH/\(.f))" ) ) ) ' \
          | npx pino-pretty >> changelog


      - name: Get file changes
        id: get-file-changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          prNumber: ${{ github.event.number }}

      - name: Get page List
        id: get-page-list
        run: |
          pagelist=$(<.meta/pagelist)
          echo "page-list=$pagelist" >> "$GITHUB_OUTPUT"

      - name: Generate preview links
        uses: actions/github-script@v6.4.1
        env:
          RUN_ID: ${{ github.event.workflow_run.id }}
          WORKSPACE: ${{ github.workspace }}
          DEPLOYID: ${{ github.event.number }}
          MODIFIEDFILES: ${{ steps.get-file-changes.outputs.files_modified }}
          NEWFILES: ${{ steps.get-file-changes.outputs.files_added }}
          PAGEFILES: ${{ steps.get-page-list.outputs.page-list }}}
        with:
          script: |
            const modifiedFiles = ${{ env.MODIFIEDFILES }}
            const newFiles = ${{ env.NEWFILES }}
            const pageFiles = ${{ env.PAGEFILES }}
            console.log(`Modified files: ${modifiedFiles}`)
            console.log(`Page files: ${pageFiles}`)

            if (newFiles) {
              for (const file of $(newFiles)) {
                console.log(`New file: ${file}`)
              }
            }

            if (modifiedFiles) {
              for (const file of $(modifiedFiles)) {
                console.log(`Modified file: ${file}`)
              }
            }


      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: changelog

