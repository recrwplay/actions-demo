# This is an example of the docs-pr.yml workflow available from the recrwplay org
name: "Verify PR"

on:
  pull_request:
    branches:
    - dev

env:
  GENERATE_CHANGELOG_COMMENT: true

jobs:

  docs-build-for-pr:
    uses: recrwplay/actions-demo/.github/workflows/reusable-docs-build.yml@dev
    with:
      deploy-id: ${{ github.event.number }}
      retain-artifacts: 14
      pageList: ${{ GENERATE_CHANGELOG_COMMENT }}

  docs-verify-for-pr:
    needs: docs-build-for-pr
    uses: recrwplay/actions-demo/.github/workflows/reusable-docs-verify.yml@dev

  save-changelog:
    if: ${{ GENERATE_CHANGELOG_COMMENT }}
    needs: docs-build-for-pr
    runs-on: ubuntu-latest
    steps:
      - name: Check out PR branch
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      
      - name: Get deploy URL
        id: get-deploy-url
        env:
          ORG: ${{ github.event.repository.owner.login }}
          REPO: ${{ github.event.repository.name }}
          DEPLOYID: ${{ github.event.number }}
        run: |
          deployurl=$ORG-$REPO-$DEPLOYID.surge.sh
          echo "deploy-url=$deployurl" >> $GITHUB_OUTPUT

      - name: Get file changes
        id: get-file-changes
        uses: tj-actions/changed-files@v37
        with:
          separator: ','
          files_yaml: |
            pages:
              - modules/**/pages/**/*.adoc

      - name: Get page list for PR changelog
        id: get-page-list
        uses: actions/download-artifact@v3
        with:
          name: page-list

      - name: Read page list for PR changelog
        id: read-page-list
        run: |
          pagelist=$(cat pageList)
          pagelist="${pagelist//'%'/'%25'}"
          pagelist="${pagelist//$'\n'/'%0A'}"
          pagelist="${pagelist//$'\r'/'%0D'}"
          echo "page-list=${pagelist}" >> "$GITHUB_OUTPUT"

      - name: Generate PR changelog comment
        if: steps.get-file-changes.outputs.pages_any_changed == 'true'
        uses: actions/github-script@v6.4.1
        env:
          WORKSPACE: ${{ github.workspace }}
          DEPLOYURL: ${{ steps.get-deploy-url.outputs.deploy-url }}
          MODIFIEDFILES: ${{ steps.get-file-changes.outputs.pages_modified_files }}
          NEWFILES: ${{ steps.get-file-changes.outputs.pages_added_files }}
          PAGEFILES: ${{ steps.read-page-list.outputs.page-list }}
        with:
          script: |
            const modifiedFiles = "${{ env.MODIFIEDFILES }}".split(',').slice(0,9)
            const newFiles = "${{ env.NEWFILES }}".split(',').slice(0,9)
            const pageFiles = ${{ env.PAGEFILES }}
            const deployurl = "https://${{ env.DEPLOYURL }}"

            const preamble = `This PR includes documentation updates\n\View the updated docs at ${deployurl}`

            let newFilesList = ''
            let modifiedFilesList = ''
            
            console.log(`Modified files: ${modifiedFiles}`)
            
            if (newFiles) {
              const links = []
              for (const file of newFiles) {
                if (file.includes('/pages/')) {
                  const url = pageFiles[file].url.replace("/index.html", "")
                  const title = pageFiles[file].title
                  links.push(`- [${title}](${deployurl}/${url})`)
                }
              }
            
              if (links.length !== 0) {
                newFilesList = `\n\nNew pages:\n${links.join('\n')}`
              }
            
            }
            
            if (modifiedFiles) {
              const links = []
              for (const file of modifiedFiles) {
                if (file.includes('/pages/')) {
                  const url = pageFiles[file].url.replace("/index.html", "")
                  const title = pageFiles[file].title
                  links.push(`- [${title}](${deployurl}/${url})`)
                }
              }
              
              if (links.length !== 0) {
                modifiedFilesList = `\n\nUpdated pages:\n${links.join('\n')}`
              }
            
            }
            
            if (newFilesList !== '' || modifiedFilesList !== '') {
              const comment = `${preamble}${newFilesList}${modifiedFilesList}`
            
              console.log(`Comment: ${comment}`)
  
              var fs = require('fs');
              fs.writeFileSync('${{ env.WORKSPACE }}/changelog', Buffer.from(comment));
            }
            


      - name: Upload changelog
        if: ${{ hashFiles('changelog') != '' }}
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: changelog

