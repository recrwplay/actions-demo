# This is an example of the docs-pr.yml workflow available from the recrwplay org
name: "Verify PR"

on:
  pull_request:
    branches:
    - dev

jobs:

  docs-build-for-pr:
    uses: recrwplay/actions-demo/.github/workflows/reusable-docs-build.yml@dev
    with:
      deploy-id: ${{ github.event.number }}
      retain-artifacts: 14
      pageList: true

  docs-verify-for-pr:
    needs: docs-build-for-pr
    uses: recrwplay/actions-demo/.github/workflows/reusable-docs-verify.yml@dev
    
    
  set-outputs:
    needs: docs-build-for-pr
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      deploy-url: ${{ steps.get-deploy-url.outputs.deploy-url }}
    steps:
      - id: get-deploy-url
        env:
          ORG: ${{ github.event.repository.owner.login }}
          REPO: ${{ github.event.repository.name }}
          DEPLOYID: ${{ github.event.number }}
        run: |
          deployurl=$ORG-$REPO-$DEPLOYID.surge.sh
          echo "deploy-url=$deployurl" >> $GITHUB_OUTPUT
        
  save-changelog:
    needs: set-outputs
    runs-on: ubuntu-latest
    steps:
      - name: Check out PR branch
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get file changes
        id: get-file-changes
        uses: tj-actions/changed-files@v37
        with:
          separator: ','
        #   files_yaml: |
        #     pages:
        #       - **/modules/**/pages/**/*.adoc

      # - name: Get file changes
      #   id: get-file-changes
      #   uses: trilom/file-changes-action@v1.2.4
      #   with:
      #     prNumber: ${{ github.event.number }}

      - name: Get page List
        id: get-page-list
        uses: actions/download-artifact@v3
        with:
          name: page-list

      - name: Read page list
        id: read-page-list
        run: |
          pagelist=$(cat pageList)
          pagelist="${pagelist//'%'/'%25'}"
          pagelist="${pagelist//$'\n'/'%0A'}"
          pagelist="${pagelist//$'\r'/'%0D'}"
          echo "page-list=${pagelist}" >> "$GITHUB_OUTPUT"

      - name: Generate preview links
        # if: steps.get-file-changes.outputs.any_changed == 'true'
        uses: actions/github-script@v6.4.1
        env:
          WORKSPACE: ${{ github.workspace }}
          DEPLOYURL: ${{ needs.set-outputs.outputs.deploy-url }}
          MODIFIEDFILES: ${{ steps.get-file-changes.outputs.all_changed_and_modified_files }}
          NEWFILES: ${{ steps.get-file-changes.outputs.added_files }}
          PAGEFILES: ${{ steps.read-page-list.outputs.page-list }}
        with:
          script: |
            const modifiedFiles = ${{ env.MODIFIEDFILES }}.split(',')
            const newFiles = ${{ env.NEWFILES }}.split(',')
            const pageFiles = ${{ env.PAGEFILES }}
            const deployurl = "https://${{ env.DEPLOYURL }}"

            const preamble = `This PR contains docs changes\nYou can review the changes at ${deployurl}`
            let newFilesList = ''
            let modifiedFilesList = ''
            
            console.log(`Modified files: ${modifiedFiles}`)
            
            if (newFiles.length !== 0) {
              const links = []
              console.log("Adding new files to comment")
              for (const file of newFiles) {
                if (file.includes('/pages/')) {
                  const url = pageFiles[file].url
                  const title = pageFiles[file].title
                  links.push(`- [${title}](${deployurl}/${url})`)
                }
              }
            
              newFilesList = `\n\nNew pages:\n${links.join('\n')}`
            
            }
            
            if (modifiedFiles.length !== 0) {
              console.log("Adding modified files to comment")
              const links = []
              for (const file of modifiedFiles) {
                console.log(`Modified file: ${file}`)
                if (file.includes('/pages/')) {
                  const url = pageFiles[file].url
                  const title = pageFiles[file].title
                  links.push(`- [${title}](${deployurl}/${url})`)
                }
              }
              
              modifiedFilesList = `\n\nUpdated pages:\n${links.join('\n')}`
            
            }
            
            const comment = `${preamble}${newFilesList}${modifiedFilesList}`
            
            console.log(`Comment: ${comment}`)

            var fs = require('fs');
            fs.writeFileSync('${{ env.WORKSPACE }}/changelog', Buffer.from(comment));


      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: changelog

