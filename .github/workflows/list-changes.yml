# Deploy HTML generated by Antora to surge.sh
# Docs are published at <org>-<repo>-<deployid>.surge.sh

# By default, this workflow runs on completion of a workflow called "Verify PR"

# This workflow expects the triggering workflow to generate an artifact called "docs"
# - update the reference to "docs" and "docs.zip" in this workflow if your triggering workflow generates an artifact with a different name

name: "List changes"

on:
  pull_request:

jobs:
  set-outputs:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      deploy-url: ${{ steps.get-deploy-url.outputs.deploy-url }}
    steps:

      - id: get-deploy-url
        run: |
          deployurl=${{ github.event.repository.owner.login}}-${{ github.event.repository.name}}-${{ github.event.number }}.surge.sh
          echo "deploy-url=$deployurl" >> $GITHUB_OUTPUT
      
  show-changes:
    needs: set-outputs
    runs-on: ubuntu-latest
    steps:
      - name: gh test
        run: gh pr status --json author --jq '.[]' | npx pino-pretty
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
      - name: pr list test
        run: gh pr view ${{ github.event.number }} --json files --jq 'limit(10; .files.[] | select(.path | contains("/pages/")) as $changes |  (.path | sub("modules/.+/pages/(?<f>.*).adoc"; "${{ needs.set-outputs.get-deploy-url.outputs.deploy-url }}/\(.f)" ) ) ) ' | npx pino-pretty
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
      - name: Get links to updated files
        id: list-changes
        run: |
          changes=$(gh pr view ${{ github.event.number }} --json files --jq 'limit(10; .files.[] | select(.path | contains("/pages/")) as $changes |  (.path | sub("modules/.+/pages/(?<f>.*).adoc"; "${{ needs.set-outputs.get-deploy-url.outputs.deploy-url }}/\(.f)" ) ) ) ' | npx pino-pretty)
          echo "changes=$changes" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
      - name: Add comment
        run: |
          echo "Changes:"
          echo ${{ steps.list-changes.outputs.changes }}

